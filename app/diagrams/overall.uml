@startuml

package React {
    class SplitView {
        item
        detail
    }

    class Creator {
        PyObjc_handles
        draggables
        exit

        create_window()
    }

    Creator::create_window <|-r- SplitView
    SplitView::item <|-- FileManager
    SplitView::detail <|-l- TabManager

    class FileManager {
        ...

        openProject()
        openFileAsTab()
        loadJSON()
        loadCSV()â€ 
        loadWorkspace()
    }


    class TabManager {
        ...

        launchTab(JSXObj, init, active)
        activeTab(id)
        closeTab(id)

        () => storeState
        () => pullState
        () => pullInit
        
    }

    TabManager <|-- SOMView
    TabManager <|-- WelcomeView
    TabManager <|-- ModelEditorView
    TabManager <|-- ImageVizView
    TabManager <|-- ModelEditorView
    TabManager <|-- Scatter3DView

    class ImageVizView {
        engine
    }
    class ModelEditorView {
        verifyService
    }

    class Scatter3DView {
        trainingData
        weightData
    }

    class SOMView {
    }

    Scatter3DView::trainingData -d-> FileManager::loadCSV
    Scatter3DView::weightData -d-> FileManager::loadJSON
}

package Python {


class Graph {
    global_params : {}
    nodes : {}

   create(node_type, props)
   set_input(d)
   get_output()
   set_param(k,v)
}

class ModelCompiler{

}
class Node {
    uid
    output_ready
    incoming : {}

}

class SOM {
    nhood_gaussian()
    nhood_bubble()
    nhood_mexican()

    dist_cosine()
    dist_euclidean()
    dist_manhattan()

    ...
}

class SOMNode {
}

class Dist {
}
class Concat {
}

class BMU {
}

class Calibrate {
}

Graph <|-- Node
SOM <|-- SOMNode
Node <|-- SOMNode
Node <|-- Dist
Node <|-- Concat
Node <|-- BMU
Node <|-- Calibrate



class CommunicationHub {
   pydict2json(d)
   webkit_eval_js(...)
   ...
}

class APIHandle {
   fileServices
   services_handle : {}
   services : []
   services_n : int

   launch_service(key)
   close_service(id)
   call_service(id, method, params)
}

APIHandle *-- CommunicationHub





interface Service
package Services {

Service <|-- VisualizationService
Service <|-- OtherService
Service <|-- ModelService



class VisualizationService{

}




class SOMViewService{

}

class ModelService{
    model
    graph
}

Graph *-- ModelService

}

class DatastoreService{
    workspace
    loaders : {}
    dumpers : {}
    importers : {}
    exporters : {}

    import_data_from_csv()
    fetch_objects()
    load_workspace()
    ...
}
}


ModelCompiler -u-> ModelService
ModelCompiler -u-> DatastoreService
ModelCompiler -u-> Graph

ModelService --> DatastoreService
SOMViewService --> DatastoreService
APIHandle *-- DatastoreService
APIHandle *-- ModelService
APIHandle *-- VisualizationService
APIHandle *-- SOMViewService
APIHandle *-- OtherService
SOMView *-- SOMViewService
ImageVizView::engine -d-> CommunicationHub
ModelEditorView -d-> ModelService

FileManager::loadCSV -d-> APIHandle::fileServices
FileManager::loadJSON -d-> APIHandle::fileServices
FileManager::loadWorkspace -d-> DatastoreService::load_workspace
SOMView -d-> FileManager
SOMView -d-> APIHandle
ModelEditorView -d-> APIHandle
ModelEditorView -d-> FileManager

@enduml
